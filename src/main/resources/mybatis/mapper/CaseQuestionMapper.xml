<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.CaseQuestionMapper">
  <resultMap id="BaseResultMap" type="po.CaseQuestion">
    <id column="question_id" jdbcType="INTEGER" property="questionId" />
    <result column="question" jdbcType="VARCHAR" property="question" />
    <result column="cs_id" jdbcType="INTEGER" property="csId" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="question_score" jdbcType="INTEGER" property="questionScore" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    question_id, question, cs_id, note, question_score
  </sql>
  <select id="selectByExample" parameterType="po.CaseQuestionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from case_question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from case_question
    where question_id = #{questionId,jdbcType=INTEGER}
  </select>


  <select id="selectBycsid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from case_question
    where cs_id = #{csId,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from case_question
    where question_id = #{questionId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="po.CaseQuestion">
    insert into case_question (question_id, question, cs_id, 
      note, question_score)
    values (#{questionId,jdbcType=INTEGER}, #{question,jdbcType=VARCHAR}, #{csId,jdbcType=INTEGER}, 
      #{note,jdbcType=VARCHAR}, #{questionScore,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="po.CaseQuestion">
    insert into case_question
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="questionId != null">
        question_id,
      </if>
      <if test="question != null">
        question,
      </if>
      <if test="csId != null">
        cs_id,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="questionScore != null">
        question_score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="questionId != null">
        #{questionId,jdbcType=INTEGER},
      </if>
      <if test="question != null">
        #{question,jdbcType=VARCHAR},
      </if>
      <if test="csId != null">
        #{csId,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="questionScore != null">
        #{questionScore,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="po.CaseQuestionExample" resultType="java.lang.Long">
    select count(*) from case_question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update case_question
    <set>
      <if test="record.questionId != null">
        question_id = #{record.questionId,jdbcType=INTEGER},
      </if>
      <if test="record.question != null">
        question = #{record.question,jdbcType=VARCHAR},
      </if>
      <if test="record.csId != null">
        cs_id = #{record.csId,jdbcType=INTEGER},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.questionScore != null">
        question_score = #{record.questionScore,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update case_question
    set question_id = #{record.questionId,jdbcType=INTEGER},
      question = #{record.question,jdbcType=VARCHAR},
      cs_id = #{record.csId,jdbcType=INTEGER},
      note = #{record.note,jdbcType=VARCHAR},
      question_score = #{record.questionScore,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="po.CaseQuestion">
    update case_question
    <set>
      <if test="question != null">
        question = #{question,jdbcType=VARCHAR},
      </if>
      <if test="csId != null">
        cs_id = #{csId,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="questionScore != null">
        question_score = #{questionScore,jdbcType=INTEGER},
      </if>
    </set>
    where question_id = #{questionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="po.CaseQuestion">
    update case_question
    set question = #{question,jdbcType=VARCHAR},
      cs_id = #{csId,jdbcType=INTEGER},
      note = #{note,jdbcType=VARCHAR},
      question_score = #{questionScore,jdbcType=INTEGER}
    where question_id = #{questionId,jdbcType=INTEGER}
  </update>
</mapper>